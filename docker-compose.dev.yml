version: '3.7'

services:
  kontext-dev:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.kontext-dev
    environment:
      - TZ=Europe/Prague
      - DEV_SERVER_HOST=0.0.0.0
    command: bash -c "./scripts/install/conf/docker/run.dev.sh"
    ports:
      - "5678:5678"
      - "5679:5679"
    volumes:
      - ./scripts/install/conf/docker/config.default.xml:/opt/kontext/conf/config.xml
      # we have to bind folders separatelly
      # if we bind whole root, container can't access its node_modules
      - ./lib:/opt/kontext/lib
      - ./locale:/opt/kontext/locale
      - ./scripts:/opt/kontext/scripts
      - ./templates:/opt/kontext/templates
      - ./worker:/opt/kontext/worker
      # similar reason for binding folders
      # we need to share dist files with nginx
      - dist:/opt/kontext/public/files/dist
      - ./public/app.py:/opt/kontext/public/app.py
      - ./public/ws_app.py:/opt/kontext/public/ws_app.py
      - ./public/files/css:/opt/kontext/public/files/css
      - ./public/files/html:/opt/kontext/public/files/html
      - ./public/files/img:/opt/kontext/public/files/img
      - ./public/files/js:/opt/kontext/public/files/js
      - ./public/files/misc:/opt/kontext/public/files/misc
      - ./public/files/themes:/opt/kontext/public/files/themes
    networks:
      - redis
      - kontext
    depends_on: 
      - redis

  redis:
    image: redis:latest
    environment:
      - TZ=Europe/Prague
    networks:
      - redis
    ports:
      - "16379:6379"

  nginx:
    image: nginx:latest
    environment:
      - TZ=Europe/Prague
    ports:
      - "8080:80"
    volumes:
      - ./scripts/install/conf/docker/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - dist:/opt/kontext/public/files/dist
      - ./public/files/html:/opt/kontext/public/files/html
      - ./public/files/img:/opt/kontext/public/files/img
      - ./public/files/js:/opt/kontext/public/files/js
      - ./public/files/misc:/opt/kontext/public/files/misc
      - ./public/files/themes:/opt/kontext/public/files/themes
    networks:
      - kontext
    depends_on:
      - kontext-dev

volumes:
  dist:

networks:
  redis: {}
  kontext: {}